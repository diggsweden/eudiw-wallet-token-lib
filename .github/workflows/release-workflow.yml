# SPDX-FileCopyrightText: 2025 diggsweden/eudiw-wallet-token-lib
#
# SPDX-License-Identifier: CC0-1.0

# Release Workflow
# 
# Purpose: This workflow controls the release process for tagged versions, ensuring that
# only authorized developers can create production releases while allowing anyone to
# create SNAPSHOT releases.
#
# How it works:
# 1. Triggers automatically when a tag matching semver format (vX.Y.Z) is pushed
# 2. Checks if the tag is a SNAPSHOT release or a production release
# 3. For production releases, verifies the user is in the authorized developers list
# 4. Updates version numbers in pom.xml and updates the changelog
# 5. Calls the release-lib workflow to perform the actual release process
#
# Security controls:
# - Non-SNAPSHOT releases require authorization via the AUTHORIZED_RELEASE_DEVELOPERS secret
# - SNAPSHOT releases can be created by any contributor that has tag push access to the repository
# - Unauthorized release attempts will fail with a clear error message
#
# Required Secrets:
#   AUTHORIZED_RELEASE_DEVELOPERS: Comma-separated list of GitHub usernames allowed to create 
#                                  production releases
#
# Uses:
#   - diggsweden/.github/.github/workflows/version-bump-changelog.yml: Updates version numbers and changelog
#   - ./.github/workflows/release-lib.yml: Performs the actual release process
#
name: Release Workflow

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"  # Matches any SemVer tag, including pre-release
permissions:
  contents: read

jobs:
  check-release-permission:
    runs-on: ubuntu-latest
    outputs:
      IS_SNAPSHOT: ${{ steps.check-tag.outputs.IS_SNAPSHOT }}
      CAN_RELEASE: ${{ steps.check-permission.outputs.CAN_RELEASE }}
    steps:
      - name: Check tag type
        id: check-tag
        run: |
          TAG_NAME="${{ github.ref_name }}"
          if [[ "${TAG_NAME}" == *-SNAPSHOT ]]; then
            echo "IS_SNAPSHOT=true" >> "$GITHUB_OUTPUT"
          else
            echo "IS_SNAPSHOT=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Check permission
        id: check-permission
        env:
          AUTHORIZED_DEVS: ${{ secrets.AUTHORIZED_RELEASE_DEVELOPERS }}
        run: |
          # Always allow SNAPSHOT releases
          if [[ "${{ steps.check-tag.outputs.IS_SNAPSHOT }}" == "true" ]]; then
            echo "CAN_RELEASE=true" >> "$GITHUB_OUTPUT"
            exit 0
          fi

          # For non-SNAPSHOT, check if current actor is in the authorized list
          # Simple grep for exact username match
          ACTOR="${{ github.actor }}"
          if [[ -n "$AUTHORIZED_DEVS" ]] && echo ",$AUTHORIZED_DEVS," | grep -q ",$ACTOR,"; then
            echo "CAN_RELEASE=true" >> "$GITHUB_OUTPUT"
          else
            echo "CAN_RELEASE=false" >> "$GITHUB_OUTPUT"
          fi

  fail-unauthorized:
    runs-on: ubuntu-latest
    needs: check-release-permission
    if: needs.check-release-permission.outputs.CAN_RELEASE == 'false'
    steps:
      - name: Fail unauthorized release
        run: |
          echo "Error: ${{ github.actor }} is not authorized to create non-SNAPSHOT releases."
          echo "Only authorized developers can create production releases."
          exit 1

  version-bump:
    needs: check-release-permission
    if: needs.check-release-permission.outputs.CAN_RELEASE == 'true'
    secrets: inherit
    permissions:
      contents: write
    uses: diggsweden/.github/.github/workflows/version-bump-changelog.yml@main
    with:
      updatePom: true
      file_pattern: pom.xml CHANGELOG.md

  release-lib:
    needs: [version-bump, check-release-permission]
    if: needs.check-release-permission.outputs.CAN_RELEASE == 'true'    
    permissions:
      contents: write
      id-token: write
      packages: write
      issues: write
    secrets: inherit
    uses: ./.github/workflows/release-lib.yml
