# SPDX-FileCopyrightText: 2025 diggsweden/eudiw-wallet-token-lib
#
# SPDX-License-Identifier: CC0-1.0

# Release Lib Workflow
#
# Purpose: This workflow automates the release process for libraries. It handles building,
# testing, signing, and publishing to both Maven Central and GitHub Packages.
#
# How it works:
# 1. Checks out the main branch and sets up Java
# 2. Identifies the latest tag to determine if this is a SNAPSHOT release
# 3. Generates appropriate release notes based on commit history since the last tag
# 4. Imports the GPG key for signing artifacts
# 5. Deploys artifacts to Maven Central using the configured credentials
# 6. Creates a GitHub release with the generated release notes
# 7. Uploads logs for debugging purposes
#
# Environment Variables:
#   MAVEN_CLI_OPTS: Common Maven CLI options that control build behavior:
#     - Enables batch mode for CI environments
#     - Disables progress indicators for cleaner logs
#     - Fails at end to collect all errors before stopping
#     - Enables colored output for better readability
#     - Configures installation and deployment to happen at the end of the build
#
# Required Secrets:
#   OSPO_BOT_GPG_PRIV: GPG private key used for signing the artifacts
#   OSPO_BOT_GPG_PASS: Passphrase for the GPG private key
#   OSPO_BOT_GPG_PUB: GPG public key for verification
#   MAVENCENTRAL_USERNAME: Username for Maven Central repository
#   MAVENCENTRAL_PASSWORD: Password for Maven Central repository
#   RELEASE_TOKEN: GitHub token with permissions to create releases
#   GITHUB_TOKEN: Default GitHub token for repository operations

---
name: Release Lib

on: [workflow_call] # yamllint disable-line rule:truthy

permissions:
  contents: read

env:
  MAVEN_CLI_OPTS: "--batch-mode --no-transfer-progress --errors --fail-at-end -Dstyle.color=always -DinstallAtEnd=true -DdeployAtEnd=true"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
      issues: write

    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: main
          fetch-depth: 0

      - name: Set up JDK
        uses: actions/setup-java@dded0888837ed1f317902acf8a20df0ad188d165 # v5.0.0
        with:
          java-version: 21
          distribution: "temurin"
          cache: "maven"

      - name: Fetch git-cliff templates
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          repository: diggsweden/.github
          path: .github-templates
          ref: main

      - name: Get latest tag
        id: get-latest-tag
        run: |
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
          echo "LATEST_TAG=${LATEST_TAG}" >> "$GITHUB_OUTPUT"
          if [[ "${LATEST_TAG}" == *-SNAPSHOT ]]; then
            echo "IS_SNAPSHOT=true" >> "$GITHUB_OUTPUT"
          else
            echo "IS_SNAPSHOT=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate Releasenotes (non-SNAPSHOT)
        if: steps.get-latest-tag.outputs.IS_SNAPSHOT == 'false'
        uses: orhun/git-cliff-action@d77b37db2e3f7398432d34b72a12aa3e2ba87e51 # v4.6.0
        with:
          config: .github-templates/gitcliff-templates/default.toml
          args: --latest --ignore-tags '.*SNAPSHOT|early-access'
        env:
          OUTPUT: ReleasenotesTmp
          GITHUB_REPO: ${{ github.repository }}

      - name: Generate Releasenotes (SNAPSHOT)
        if: steps.get-latest-tag.outputs.IS_SNAPSHOT == 'true'
        uses: orhun/git-cliff-action@d77b37db2e3f7398432d34b72a12aa3e2ba87e51 # v4.6.0
        with:
          config: .github-templates/gitcliff-templates/default.toml
          args: --latest --ignore-tags 'early-access'
        env:
          OUTPUT: ReleasenotesTmp
          GITHUB_REPO: ${{ github.repository }}

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6.3.0
        with:
          gpg_private_key: ${{ secrets.OSPO_BOT_GPG_PRIV }}
          passphrase: ${{ secrets.OSPO_BOT_GPG_PASS }}

      - name: Release to Maven Central and GitHub Releases
        env:
          MAVEN_CENTRAL_USERNAME: ${{ secrets.MAVENCENTRAL_USERNAME }}
          MAVEN_CENTRAL_PASSWORD: ${{ secrets.MAVENCENTRAL_PASSWORD }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.OSPO_BOT_GPG_PUB }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.OSPO_BOT_GPG_PRIV }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.OSPO_BOT_GPG_PASS }}
          GITHUB_ACTOR: ${{ github.actor }}
          PACKAGE_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # shellcheck disable=SC2086 
          mvn $MAVEN_CLI_OPTS deploy --settings .mvn/settings.xml -Pcentral-release

          # shellcheck disable=SC2086 
          mvn $MAVEN_CLI_OPTS jreleaser:full-release -DskipTests

      - name: JReleaser output
        if: always()
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: jreleaser-logs
          path: |
            target/jreleaser/trace.log
            target/jreleaser/output.properties
